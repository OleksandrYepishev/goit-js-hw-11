{"version":3,"sources":["js/task-2.js"],"names":["users","name","active","toggleUserState","allUsers","username","Promise","resolve","map","user","then","console","table"],"mappings":";AAKA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,IAGpBC,EAAkB,CAACC,EAAUC,IACxB,IAAIC,QAASC,IAGhBA,EAFqBH,EAASI,IAAIC,GAC9BA,EAAKR,OAASI,EAAW,IAAKI,EAAMP,QAASO,EAAKP,QAAWO,MAWzEN,EAAgBH,EAAO,SAASU,KAAKC,QAAQC,OAC7CT,EAAgBH,EAAO,QAAQU,KAAKC,QAAQC","file":"task-2.208c8340.js","sourceRoot":"../src","sourcesContent":["// Подзадание 2\r\n\r\n// Перепиши функцию toggleUserState() так, чтобы она не использовала callback - функцию callback,\r\n//   а принимала всего два параметра allUsers и username и возвращала промис.\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, username) => {\r\n    return new Promise((resolve) => {\r\n        const updatedUsers = allUsers.map(user =>\r\n            user.name === username ? { ...user, active: !user.active } : user);\r\n        resolve(updatedUsers)\r\n    });\r\n};\r\n\r\n\r\n// Currently the function works like this\r\n// toggleUserState(users, 'Mango', console.table);\r\n// toggleUserState(users, 'Ajax', console.table);\r\n\r\n// The function should work like this\r\ntoggleUserState(users, 'Mango').then(console.table);\r\ntoggleUserState(users, 'Ajax').then(console.table);"]}