{"version":3,"sources":["js/task-1.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then"],"mappings":";AAKA,MAAMA,EAAQC,GAEJ,IAAIC,QAAQ,CAACC,EAASC,KAE5BC,WAAW,KAIPF,EAAQF,IAITA,KAIDK,EAASC,GAAQC,QAAQC,uBAAuBF,OAGtDP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ","file":"task-1.ba2da0d6.js","sourceRoot":"../src","sourcesContent":["// Подзадание 1\r\n\r\n// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд.\r\n// Значением исполнившегося промиса должно быть то кол - во миллисекунд которое передали во время вызова функции delay.\r\n\r\nconst delay = ms => {\r\n  // Change this function\r\n   return new Promise((resolve, reject) => {\r\n    \r\n    setTimeout(() => {\r\n      const isSuccess = true;\r\n\r\n      if (isSuccess) {\r\n        resolve(ms);\r\n      } else {\r\n        reject(\"error\");\r\n      }\r\n    }, ms);\r\n  });\r\n};\r\n\r\nconst logger = time => console.log(`Fulfilled after ${time}ms`);\r\n\r\n// Tests\r\ndelay(2000).then(logger); // Fulfilled after 2000ms\r\ndelay(1000).then(logger); // Fulfilled after 1000ms\r\ndelay(1500).then(logger); // Fulfilled after 1500ms"]}