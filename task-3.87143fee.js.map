{"version":3,"sources":["js/task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","resolve","reject","delay","setTimeout","id","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAKA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkBC,GACf,IAAIC,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAQX,EAA0B,IAAK,KAE7CY,WAAW,KACUT,KAAKE,SAAW,GAGjCI,EAAQ,CAAEI,GAAIN,EAAYM,GAAIF,MAAAA,IAE9BD,EAAOH,EAAYM,KAEpBF,KAGDG,EAAa,EAAGD,GAAAA,EAAIF,MAAAA,MACxBI,QAAQC,mBAAmBH,kBAAmBF,QAE1CM,EAAWJ,IACfE,QAAQG,qCAAqCL,+BAQ/CP,EAAgB,CAAEO,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAChEX,EAAgB,CAAEO,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ","file":"task-3.87143fee.js","sourceRoot":"../src","sourcesContent":["////  Подзадание 3\r\n\r\n// Перепиши функцию makeTransaction() так, чтобы она не использовала callback - функции onSuccess и onError,\r\n//     а принимала всего один параметр transaction и возвращала промис.\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = transaction => {\r\n  return new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({ id: transaction.id, delay });\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\nconst logSuccess = ({ id, delay }) => {\r\n  console.log(`Transaction ${id} processed in ${delay}ms`);\r\n};\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n// // Currently the function works like this\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n\r\n// The function should work like this\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);"]}